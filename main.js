(()=>{"use strict";var n={402:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: sans-serif;\n}\n\n#page-head {\n    position:relative;\n    height: 50vh;\n    width: 100vw;\n    background-size:cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    text-align: center;\n}\n\n#page-head h1 {\n    /* position: absolute; */\n    /* bottom: 0; */\n    color: white;\n    width: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    padding: 2rem;\n}\n\n#page-copy {\n    padding: 1rem 2rem;\n    margin-top: 2rem;\n}\n\n#page-copy-head {\n    font-weight: bold;\n    font-size: 1.2rem;\n}\n\n#page-copy-body {\n    padding-top: 0.8rem;\n}\n\n#page-head-nav button {\n    padding: 0.5rem 1.8rem;\n    border: none;\n    margin: 1rem;\n    font-size: 1.2rem;\n    background-color: rgba(0, 0, 0, 0.5);\n    color: white;\n    transition: 0.1s;\n}\n\n#page-head-nav button:hover {\n    background-color: rgba(255, 255, 255, 0.8);\n    color: black;\n}\n\n#menu {\n    display: flex;\n    align-items: stretch;\n    width: 100%;\n}\n\n.menu-section {\n    margin-top: 2rem;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    border-right: 1px solid black;\n}\n\n.menu-section:last-child {\n    border-right: 0px;\n}\n\n.menu-section-name {\n    text-align: center;\n    font-size: 1.75rem;\n    font-weight: bold;\n    padding-bottom: 0px;\n    width: 100%;\n    flex-grow: 0;\n}\n\n.menu-section-items {\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    padding-left: 2rem;\n}\n\n.menu-item {\n    padding: 2rem 2rem;\n}\n\n.menu-item-name {\n    font-size: 1.25rem;\n    font-weight: bold;\n}\n\n.menu-item-price {\n    padding-top: 0.5rem;\n}\n\n.menu-item-calories {\n    font-style: italic;\n    font-size: 0.75rem;\n}","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,YAAY;IACZ,qBAAqB;IACrB,4BAA4B;IAC5B,2BAA2B;IAC3B,kBAAkB;AACtB;;AAEA;IACI,wBAAwB;IACxB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,oCAAoC;IACpC,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,YAAY;IACZ,iBAAiB;IACjB,oCAAoC;IACpC,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,0CAA0C;IAC1C,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,oBAAoB;IACpB,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,6BAA6B;AACjC;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;IACnB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: sans-serif;\n}\n\n#page-head {\n    position:relative;\n    height: 50vh;\n    width: 100vw;\n    background-size:cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    text-align: center;\n}\n\n#page-head h1 {\n    /* position: absolute; */\n    /* bottom: 0; */\n    color: white;\n    width: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    padding: 2rem;\n}\n\n#page-copy {\n    padding: 1rem 2rem;\n    margin-top: 2rem;\n}\n\n#page-copy-head {\n    font-weight: bold;\n    font-size: 1.2rem;\n}\n\n#page-copy-body {\n    padding-top: 0.8rem;\n}\n\n#page-head-nav button {\n    padding: 0.5rem 1.8rem;\n    border: none;\n    margin: 1rem;\n    font-size: 1.2rem;\n    background-color: rgba(0, 0, 0, 0.5);\n    color: white;\n    transition: 0.1s;\n}\n\n#page-head-nav button:hover {\n    background-color: rgba(255, 255, 255, 0.8);\n    color: black;\n}\n\n#menu {\n    display: flex;\n    align-items: stretch;\n    width: 100%;\n}\n\n.menu-section {\n    margin-top: 2rem;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    border-right: 1px solid black;\n}\n\n.menu-section:last-child {\n    border-right: 0px;\n}\n\n.menu-section-name {\n    text-align: center;\n    font-size: 1.75rem;\n    font-weight: bold;\n    padding-bottom: 0px;\n    width: 100%;\n    flex-grow: 0;\n}\n\n.menu-section-items {\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    padding-left: 2rem;\n}\n\n.menu-item {\n    padding: 2rem 2rem;\n}\n\n.menu-item-name {\n    font-size: 1.25rem;\n    font-weight: bold;\n}\n\n.menu-item-price {\n    padding-top: 0.5rem;\n}\n\n.menu-item-calories {\n    font-style: italic;\n    font-size: 0.75rem;\n}"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],A=o.base?s[0]+o.base:s[0],d=i[A]||0,p="".concat(A," ").concat(d);i[A]=d+1;var l=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var m=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var s=o(n,r),A=0;A<i.length;A++){var d=t(i[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!n;)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n="page-head",e="page-head-nav",o="page-copy";function r(n,e="",t=[],o=""){const r=document.createElement(n);return e&&(r.id=e),t.length>0&&r.classList.add(...t),o&&(r.textContent=o),r}const i=e=>{document.querySelector(`#${n}`).style.backgroundImage=`url("${e}")`};const a=t.p+"eec946232e06b0ea7d0c.jpeg";function c(){let n=r("div","page-copy-head"),e=r("h1","",[],"Homepage");n.appendChild(e);let t=r("div","page-copy-body",[],"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Voluptatum sequi veritatis accusamus ut assumenda ipsum incidunt commodi, culpa aspernatur, unde, praesentium rerum quasi a eos fugiat nulla magnam tempore. Obcaecati?");return i(a),[n,t]}const s=t.p+"a35b46aeb5ce4d901222.jpeg";class A{constructor(n,e,t){this.name=n,this.price=e,this.calories=t}getDOMElement(){let n=r("div","",["menu-item"],""),e=r("div","",["menu-item-name"],this.name),t=r("div","",["menu-item-price"],`₹${this.price}`),o=r("div","",["menu-item-calories"],`${this.calories} kcals`);return n.replaceChildren(e,t,o),n}}function d(){const n={Appetizers:[new A("French Fries",140,244),new A("Chicken Strips",210,320),new A("Bruschetta",180,265)],"Main Course":[new A("Chicken Pizza",650,850),new A("Club Sandwich",600,788),new A("Chicken Steak",620,815)],Drinks:[new A("Nimbu Paani",80,45),new A("Masala Coke",65,120)],Desserts:[new A("Chocolate Noir Ice Cream",180,210),new A("Chocolate Raspberry Cheesecake",240,365)]};let e=r("div","page-copy-head"),t=r("h1","","","Menu");e.appendChild(t);let o=r("div","page-copy-body",[],""),a=r("div","menu",[],"");for(const[e,t]of Object.entries(n)){let n=r("div","",["menu-section"],""),o=r("div","",["menu-section-name"],e),i=r("div","",["menu-section-items"],"");for(let n of t)i.appendChild(n.getDOMElement());n.replaceChildren(o,i),a.appendChild(n)}return o.appendChild(a),i(s),[e,o]}const p=t.p+"1074eaad4fefe07eda84.jpeg";function l(){let n=r("div","page-copy-head"),e=r("h1","","","Contact Us");n.appendChild(e);let t=r("div","page-copy-body",[],"Reach out to us at +69420-EAT-FOOD, or email us at notavalidemailaddress@yolo.kong");return i(p),[n,t]}var u=t(379),m=t.n(u),g=t(795),f=t.n(g),h=t(569),C=t.n(h),B=t(565),b=t.n(B),v=t(216),I=t.n(v),y=t(589),w=t.n(y),x=t(402),k={};k.styleTagTransform=w(),k.setAttributes=b(),k.insert=C().bind(null,"head"),k.domAPI=f(),k.insertStyleElement=I(),m()(x.Z,k),x.Z&&x.Z.locals&&x.Z.locals;class E{constructor(n,e,t){this.slug=n,this.btnText=e,this.genFn=t}}!function(){!function(){const t=document.querySelector("div#content");t.appendChild(function(){let t=r("div",n,[],""),o=document.createElement("h1");o.textContent="Project: Restaurant Page",t.appendChild(o);let i=r("div",e,[],"");return t.appendChild(i),t}()),t.appendChild(r("div",o,[],""))}();const t=[];let i=null;const a=document.querySelector(`#${e}`);function s(n,e,o){const r=new E(n,e,o);t.push(r);let i=function(n,e){let t=document.createElement("button");return t.textContent=n,t.setAttribute("module",e),t.addEventListener("click",(()=>A(e))),t}(e,n);return a.appendChild(i),r}function A(n){var e,r;e=n,i=t.find((n=>n.slug===e)),r=i.genFn(),document.querySelector(`#${o}`).replaceChildren(...r)}!function(){let n=s("home","Homepage",c);s("menu","Menu",d),s("contactUs","Contact Us",l),A(n.slug)}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,